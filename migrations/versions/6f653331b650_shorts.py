"""shorts

Revision ID: 6f653331b650
Revises: 
Create Date: 2020-08-06 12:49:56.527234

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '6f653331b650'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shorttransaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('shorted_for', sa.Float(), nullable=True),
    sa.Column('shorted_at', sa.DateTime(), nullable=True),
    sa.Column('amt_shorted', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unshort',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('unshorted_for', sa.Float(), nullable=True),
    sa.Column('unshorted_at', sa.DateTime(), nullable=True),
    sa.Column('amt_unshorted', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('short', sa.Column('amt_shorted', sa.Integer(), nullable=True))
    op.add_column('short', sa.Column('exists', sa.Boolean(), nullable=True))
    op.add_column('short', sa.Column('unshorted_at', sa.DateTime(), nullable=True))
    op.add_column('short', sa.Column('unshorted_for', sa.Float(), nullable=True))
    op.drop_column('short', 'expires_at')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('short', sa.Column('expires_at', mysql.DATETIME(), nullable=True))
    op.drop_column('short', 'unshorted_for')
    op.drop_column('short', 'unshorted_at')
    op.drop_column('short', 'exists')
    op.drop_column('short', 'amt_shorted')
    op.drop_table('unshort')
    op.drop_table('shorttransaction')
    # ### end Alembic commands ###
